<?xml version="1.0"?>
<launch>
    <arg name="gui" default="true"/>
    <arg name="paused" default="false"/>

    <!-- <arg name="world_name" default="$(find dave_worlds)/worlds/dave_ocean_waves_occluded_bottom.world"/> -->
    <!-- <arg name="world_name" default="$(find dave_worlds)/worlds/dave_ocean_waves_transient_current.world"/> -->
    <!-- <arg name="world_name" default="$(find dave_worlds)/worlds/dave_ocean_waves_shipwreck.world"/> -->
    <!-- <arg name="world_name" default="$(find dave_worlds)/worlds/dave_ocean_waves.world"/> -->
    <arg name="world_name" default="$(find dave_worlds)/worlds/dave_probe_demo.world"/>

    <arg name="namespace" default="rexrov"/>
    <arg name="set_timeout" default="false"/>
    <arg name="timeout" default="0.0"/>
    <arg name="velocity_control" default="true"/>
    <arg name="joy_id" default="0"/>
    <arg name="start_at_origin" default="false"/>

    <!-- use Gazebo's empty_world.launch with dave_ocean_waves.world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_name)"/>
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="headless" value="false"/>
        <arg name="debug" value="false"/>
        <arg name="verbose" value="false"/>
    </include>


    <!-- use ned frame north east down -->
    <include file="$(find uuv_assistants)/launch/publish_world_ned_frame.launch"/>

    <!-- world models -->
    <node name="publish_world_models"
        pkg="uuv_assistants"
        type="publish_world_models.py"
        output="screen">
        <rosparam subst_value="true">
            meshes:
                <!-- heightmap:
                    mesh: package://uuv_gazebo_worlds/models/sand_heightmap/meshes/heightmap.dae
                    model: sand_heightmap -->
                seafloor:
                    plane: [2000, 2000, 0.1]
                    pose:
                        position: [0, 0, -100]
                north:
                    plane: [0.1, 2000, 100]
                    pose:
                        position: [1000, 0, -50]
                south:
                    plane: [0.1, 2000, 100]
                    pose:
                        position: [-1000, 0, -50]
                west:
                    plane: [2000, 0.1, 100]
                    pose:
                        position: [0, -1000, -50]
                east:
                    plane: [2000, 0.1, 100]
                    pose:
                        position: [0, 1000, -50]
                <!-- herkules_seabed:
                    mesh: package://uuv_gazebo_worlds/models/herkules_seabed/meshes/herkules_seabed.dae
                    pose:
                      position: [0, 0, -100]
                    scale: [4, 4, 1] -->
                herkules_ship_wreck:
                    mesh: package://uuv_gazebo_worlds/models/herkules_ship_wreck/meshes/herkules.dae
                    pose:
                      position: [0, 0, -100]
                      orientation: [0, 0, 1.57]
        </rosparam>
    </node>

    <!-- timeout -->
    <group if="$(arg set_timeout)">
        <include file="$(find uuv_assistants)/launch/set_simulation_timer.launch">
            <arg name="timeout" value="$(arg timeout)"/>
        </include>
    </group>

    <!-- rexrov robot with oberon7 arm -->
    <include file="$(find rexrov_description)/launch/upload_rexrov_oberon7.launch">
        <arg name="namespace" value="rexrov"/>
        <arg name="x" value="17"/>
        <arg name="y" value="5"/>
        <arg name="z" value="-2"/>
        <arg name="yaw" value="-1.55"/>
    </include>

    <include file="$(find rexrov_craftsman_support)/launch/rexrov_nav_controllers.launch">
      <arg name="model_name" value="rexrov" />
    </include>

    <!-- joint control for oberon7 -->
    <include file="$(find oberon7_control)/launch/joint_control.launch">
        <arg name="uuv_name" value="$(arg namespace)"/>
    </include>

</launch>
